package tcestuary

import (
	"reflect"
	"testing"

	"git.code.oa.com/tce-config/tcestuary-go/v4/configcenter"
)

func Test_parseTransportSecretConfig(t *testing.T) {
	tests := []struct {
		name    string
		want    configcenter.SecretConfig
		wantErr bool
	}{
		{
			name: "parse transport-secret",
			want: configcenter.SecretConfig{
				Method:     "rsa-2048",
				PublicKey:  "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE2R1ByWVh0Y1V4UStCQTY3WG80UwpWNXloWTBGcFJPTWxGbGhEeUhZS1loeDVhQlBYYTZneDhmOTRpc09rRzlrT2cvYkZhQVpYTkdlMklDZE1ob2ViCk9Yb1F0MFZrSzlPTzFzclR3U1U3RVJRUk8wUE4vdGw4UWtJZUQ4RHRaK0dCSGgxZzFFM3kyQUtKdkFxOWY5VWgKYkxlbUFSY01QY05XUTR3VHU0OVdjeENZYnVPckJlVzBXdWcySXdtTkt3Q25MWU13QTJpY0p2QlgrOVNMVTBRVwo1K3p4S0tJMWFmUVdyUnY1QjdLbXpZMTREWG9EeGhIcVowdWMwWGU3V2ovQ01zU2NhbTFZWU0vV29sQzNYdW8rCjRBWVNwRzFwL2M5QmJ4TW5lM1lDZnNkRWRwUFBUcGxjbUdWK2ttUVV0NjBuS0J1TGZMeVlTRm5paU83bWkwYkgKc1FJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t",
				PrivateKey: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNkdQcllYdGNVeFErQkE2N1hvNFNWNXloWTBGcFJPTWxGbGhEeUhZS1loeDVhQlBYCmE2Z3g4Zjk0aXNPa0c5a09nL2JGYUFaWE5HZTJJQ2RNaG9lYk9Yb1F0MFZrSzlPTzFzclR3U1U3RVJRUk8wUE4KL3RsOFFrSWVEOER0WitHQkhoMWcxRTN5MkFLSnZBcTlmOVVoYkxlbUFSY01QY05XUTR3VHU0OVdjeENZYnVPcgpCZVcwV3VnMkl3bU5Ld0NuTFlNd0EyaWNKdkJYKzlTTFUwUVc1K3p4S0tJMWFmUVdyUnY1QjdLbXpZMTREWG9ECnhoSHFaMHVjMFhlN1dqL0NNc1NjYW0xWVlNL1dvbEMzWHVvKzRBWVNwRzFwL2M5QmJ4TW5lM1lDZnNkRWRwUFAKVHBsY21HVitrbVFVdDYwbktCdUxmTHlZU0ZuaWlPN21pMGJIc1FJREFRQUJBb0lCQUZvY0JIVTBKRVNDb05scAo3UFZwR1d1bmJGelVURUZONGwrYnNnelUySW5haUtqMnFKMHlCc3ZUUjZabTNnZCtUc2FVdFU3MHhuT25rMU04CmFjdndZUndVWE03enRUZlpQSlhFNS84SXRMS1dtV2ZsanNhM0JodWJENVVFTmdvRndzOHVqUkZGZUZpU0ExNUsKdTlnSmlJQmpaWmNlbkx5R05ialRaQU5pUFI4NEh1c3ZEOGlyQTU3ODI5OFdVNHFmeDkxNHgzZ2MxYk11WG5xeQpqYmZHbVFubEI2OHN1ZVlEdlQ3ZkliRnlQMnE4RnB5WHVnTFc2enZxZzlBWUxrSVFXbGNzR002c2YwdVB1UVYxCmsvRzBZVGhDTU5TeTJXc1NsYkx2ZVRqYURKSXNUMC9JL05hRk5XUFVwUDd5UUczYms4cWRnUTVGSEk1SFU1aksKcHhGR1U4RUNnWUVBK2xZNG1lVjNmWVdvMHVJWEI5RVFpSG1QVit6VktLTWs1Z3puY0FtUVBLcVJoRFVQUzgvSgpMdUpMMXVJeVdRbzBZMzY3MjRWUGdpMVd3cVJrU2dpeHNXV0p3aHdJT290WTNWL1h1NFNySEVKWEwwbUpybDIyCmNldC9OZ1ZIeHVTSXJKTmFTdTlCUUtTMFlYYW5HRmdEUUdRWXpCMTZrdGFYdW5vQjhQK0pjU1VDZ1lFQTdhWEQKdlFnazZib0xBN1p0bVRVbmxSUnFHbWdDejVkQnh3Y05sTGRpaHZGck5LZnZMZXFmUDBubkRscjVkd1FtRjZkTQp2UC9wOVBPVkNBR3RZOEdzRlA5TERVci9Pb1loeUQ5MjZpRXFCKzhCbXNzVG41bXdtUHB3Wm83dC9KNGs4enpNCnEraGV0L2VlejUrWUZNQnFCQW5wUGxqSjZUUDhaODRsdk05WGxKMENnWUVBdVNVSG01cUFzMDhsTzBLSHNmcEgKZGdnaG9lL0EvdHNhTVNLZUVOaWgycHgwSHdsM0ZLVEtzR2dobXYyVUt4SkhDTWIwZlRpdFF5UHhKT2VjWEx6dApYcnd3RkdYVEdDbHpRZGJlb1F0UDJnaWVucFNPeFd6OXdHZGhvRHhyaDRnQ0pWQ2QyUW4yZ3E3TjBiK0ZlWld1CllmTWwrK0JaaFR3ODMyZlpBN3FhbGhrQ2dZQXBqa2NBRXlDQlRtc0dweXZiRXBSdFdUaUVqWk9RUVY3Yk1yeUoKT05nZHlMRjZiN00vVUR1d2tYZTU1dWFnalRVc0JiRkJpMjZaeXM1UXJCcHB5MEFRRytRLzJ0RnVwbTNaMmw4cwo2Y2V6dzNPQVllcDRpaU43WEsreS8yTldQVUV3MTN6aXdxdHRkL3RwU3ZzSkJleUQ4RWU5QTBHcmFjL0ZSeU1LCk5TZVhjUUtCZ1FDSStIdU0xY0duRzlabUxRUHJhcTdNaWoyMTR0OTR0eDg2d09wa1J5Z0hTajhsRmp5bEUvdksKVTdCSFdIK2ZWdkpaRXZaSmN1SjhNc3FDNnQxb1lLN2hOaVFLakt5UXZSeTBJdHMrVkZJMkRKVjUvazF2Qk1DMQpWQmc4dUJDVzhqWlc0SHFuNWkrdW5ubGMxUDBRd0pDczJCcGVtY3R0ZUpJMHpNNDRjTUJDckE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==",
				AesKey:     "",
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := parseTransportSecretConfig()
			if (err != nil) != tt.wantErr {
				t.Errorf("parseTransportSecretConfig() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("parseTransportSecretConfig() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestMain(m *testing.M) {
	SetConfigDirectory("./_example")
	m.Run()
}
